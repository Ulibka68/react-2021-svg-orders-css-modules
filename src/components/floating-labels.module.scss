// ---------- BOOTSTRAP
//@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,500,700);

:global(.wrapper-floating-labels) {
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

$sans-serif: Roboto, Arial, sans-serif;

// ---------- COMPONENT
.material-textfield {
  display: inline-block;
  height: 4rem;
  padding-top: 2rem;
  border: 1px solid orange;

  .input ~ label::before,
  .input[type]:invalid ~ label::before,
  .input[type]:valid ~ label::before {
    font-size: 1rem;
    top: -2rem;
  }


  .input {
    background: none;
    border: none;
    box-sizing: border-box;
    display: block;
    font-family: $sans-serif;
    font-size: 1rem;
    padding: 0.25rem 0.1rem;
    width: 100%;
  }

  .input:invalid {
    box-shadow: none;
  }

  .input:focus {
    outline: none;
  }

  label {
    display: inline-block;
    font-family: $sans-serif;
    font-size: 0;
    pointer-events: none;
    position: relative;
    text-transform: uppercase;
    width: 100%;
  }

  label::before {
    content: attr(data-content);
    position: relative;
    transition: all 0.2s ease;
    will-change: font-size, top;
  }

  label::after {
    bottom: 0.9rem;
    content: '';
    height: 0.3rem;
    left: 50%;
    position: absolute;
    transition: all 0.2s ease;
    width: 0px;
    will-change: width, left;
  }

  .input[type] ~ label::before {
    font-size: 0.75rem;
    top: -3.25rem;
  }

  .input[type]:focus ~ label::before {
    font-size: 0.75rem;
    top: -3.25rem;
  }

  .input:focus ~ label::after {
    left: 0;
    width: 100%;
  }

  //.input:invalid ~ label::before {
  //  font-size: 1rem;
  //  //top: -2rem;
  //}
}

;
// ---------- CONSTRUCTOR;
@mixin material-textfield($name, $lightcolor, $color, $darkcolor) {
  .material-textfield[data-color=#{$name}] {
    .input {
      border-bottom: 0.1rem solid $color;
      color: $darkcolor;
    }

    label::after {
      background: $color;
    }

    label::before, .input:focus ~ label::before {
      color: $lightcolor;
    }

    .input:invalid ~ label::before {
      color: $color;
    }
  }
}

;
// ---------- INCLUDE COMPONENTS;
$blue: #03A9F4;
$lightblue: lighten($blue, 15%);
$darkblue: darken($blue, 15%);

$red: #F44336;
$lightred: lighten($red, 15%);
$darkred: darken($red, 15%);

@include material-textfield("blue", $lightblue, $blue, $darkblue);
@include material-textfield("red", $lightred, $red, $darkred);